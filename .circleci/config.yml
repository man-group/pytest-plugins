
test-tmpl: &test-tmpl
  command: |
    . ../venv/bin/activate
    export DEBUG=1
    export SERVER_FIXTURES_HOSTNAME=127.0.0.1
    export SERVER_FIXTURES_JENKINS_WAR=
    cat *.egg-info/top_level.txt  | xargs -Ipysrc coverage run -p --source=pysrc setup.py test -sv -ra || touch ../FAILED-$(basename $PWD)

job-tmpl: &job-tmpl
  machine:
    image: ubuntu-2004:202010-01

  working_directory: ~/src

  steps:
    - run: env
    - checkout
    - run:
        name: Install Python
        command: |
          set -x
          sudo bash -c ". install.sh && install_python_ppa && install_python $PYTHON"
          rm -rf /opt/circleci/.pyenv

    - run:
        name: Create venv and install extras
        command: bash -c ". install.sh && init_venv $PYTHON"

    - run:
        name: Update Apt-Sources
        command: sudo bash -c ". install.sh && update_apt_sources"
    - run:
        name: Install System Dependencies
        command: sudo bash -c ". install.sh && install_system_deps"
    - run:
        name: Install Postgresql
        command: sudo bash -c ". install.sh && install_postgresql"
    - run:
        name: Install Redis
        command: sudo bash -c ". install.sh && install_redis"
    - run:
        name: Install Rethinkdb
        command: sudo bash -c ". install.sh && install_rethinkdb"
    - run:
        name: Install Mongodb
        command: sudo bash -c ". install.sh && install_mongodb"
    - run:
        name: Install Apache
        command: sudo bash -c ". install.sh && install_apache"
    - run:
        name: Install Minio
        command: sudo bash -c ". install.sh && install_minio"
    - run:
        name: Install Chrome Headless
        command: sudo bash -c ". install.sh && install_chrome_headless"

    - run:
        name: Build and install dists
        command: |
          . venv/bin/activate
          make develop
    - run:
        name: Run Tests - pytest-fixture-config
        working_directory: ~/src/pytest-fixture-config
        <<: *test-tmpl
    - run:
        name: Run Tests - pytest-shutil
        working_directory: ~/src/pytest-shutil
        <<: *test-tmpl
    - run:
        name: Run Tests - pytest-server-fixtures
        working_directory: ~/src/pytest-server-fixtures
        <<: *test-tmpl
    - run:
        name: Run Tests - pytest-pyramid-server
        working_directory: ~/src/pytest-pyramid-server
        <<: *test-tmpl
    - run:
        name: Run Tests - pytest-devpi-server
        working_directory: ~/src/pytest-devpi-server
        <<: *test-tmpl
    - run:
        name: Run Tests - pytest-listener
        working_directory: ~/src/pytest-listener
        <<: *test-tmpl
    - run:
        name: Run Tests - pytest-svn
        working_directory: ~/src/pytest-svn
        <<: *test-tmpl
    - run:
        name: Run Tests - pytest-git
        working_directory: ~/src/pytest-git
        <<: *test-tmpl
    - run:
        name: Run Tests - pytest-virtualenv
        working_directory: ~/src/pytest-virtualenv
        <<: *test-tmpl
    - run:
        name: Run Tests - pytest-webdriver
        working_directory: ~/src/pytest-webdriver
        <<: *test-tmpl
    - run:
        name: Run Tests - pytest-profiling
        working_directory: ~/src/pytest-profiling
        <<: *test-tmpl
    - run:
        name: Run Tests - pytest-verbose-parametrize
        working_directory: ~/src/pytest-verbose-parametrize
        <<: *test-tmpl
    - run:
        name: Archive Junit and Coverage
        command: |
          mkdir junit
          ./foreach.sh 'cp junit.xml ../junit/junit-$PKG.xml || true'
          ./foreach.sh 'cp .coverage.* .. || true'
          . venv/bin/activate
          coverage combine
          coverage report
          pip install urllib3[secure]
          pip install coveralls
          if [[ "$COVERALLS_REPO_TOKEN" != "" ]]; then
            CIRCLE_BUILD_NUM=$CIRCLE_WORKFLOW_ID coveralls
          else
            echo "Skipping Coveralls"
          fi

    - store_test_results:
        path: junit
    - run:
        name: Explode if tests have failed
        command: compgen -G FAILED-* && exit 1 || true

version: 2
jobs:
  py36:
    <<: *job-tmpl
    environment:
      PYTHON: "python3.6"

  py37:
    <<: *job-tmpl
    environment:
      PYTHON: "python3.7"

  py38:
    <<: *job-tmpl
    environment:
      PYTHON: "python3.8"

  py39:
    <<: *job-tmpl
    environment:
      PYTHON: "python3.9"

  py310:
    <<: *job-tmpl
    environment:
      PYTHON: "python3.10"

  coveralls:
    docker:
      - image: buildpack-deps:trusty
    steps:
      - run:
          name: Complete Coveralls
          command: |
            if [[ "$COVERALLS_REPO_TOKEN" != "" ]]; then
              curl --fail https://coveralls.io/webhook?repo_token=$COVERALLS_REPO_TOKEN -d "payload[build_num]=$CIRCLE_WORKFLOW_ID&payload[status]=done"
            else
              echo "Skipping Coveralls"
            fi

workflows:
  version: 2
  pytest-plugins:
    jobs:
      - py36
      - py37
      - py38
      - py39
      - py310
      - coveralls:
          requires:
            - py36
            - py37
            - py38
            - py39
            - py310
